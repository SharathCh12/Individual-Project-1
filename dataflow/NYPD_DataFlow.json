{
	"name": "NYPD_DataFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "NYPDcsv",
						"type": "DatasetReference"
					},
					"name": "Nypdcsv"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "tostaginglayer",
						"type": "DatasetReference"
					},
					"name": "Tosink123",
					"rejectedDataLinkedService": {
						"referenceName": "Storage to Data Flow",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ARREST_KEY as integer,",
				"          ARREST_DATE as string,",
				"          PD_CD as string,",
				"          PD_DESC as string,",
				"          KY_CD as string,",
				"          OFNS_DESC as string,",
				"          LAW_CODE as string,",
				"          LAW_CAT_CD as string,",
				"          ARREST_BORO as string,",
				"          ARREST_PRECINCT as integer,",
				"          JURISDICTION_CODE as short,",
				"          AGE_GROUP as string,",
				"          PERP_SEX as string,",
				"          PERP_RACE as string,",
				"          X_COORD_CD as string,",
				"          Y_COORD_CD as string,",
				"          Latitude as float,",
				"          Longitude as float,",
				"          {New Georeferenced Column} as string,",
				"          Row_has_nulls as string,",
				"          STANDARD_DATE as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Nypdcsv",
				"Nypdcsv select(mapColumn(",
				"          ARREST_KEY,",
				"          ARREST_DATE,",
				"          PD_CD,",
				"          PD_DESC,",
				"          KY_CD,",
				"          OFNS_DESC,",
				"          LAW_CODE,",
				"          LAW_CAT_CD,",
				"          ARREST_BORO,",
				"          ARREST_PRECINCT,",
				"          JURISDICTION_CODE,",
				"          AGE_GROUP,",
				"          PERP_SEX,",
				"          PERP_RACE,",
				"          X_COORD_CD,",
				"          Y_COORD_CD,",
				"          LATITUDE = Latitude,",
				"          LONGITUDE = Longitude,",
				"          NEW_GEO_COLUMN = {New Georeferenced Column},",
				"          ROW_HAS_NULLS = Row_has_nulls,",
				"          STANDARD_DATE",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"Nypdcsv sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ARREST_KEY as string,",
				"          ARREST_DATE as string,",
				"          PD_CD as string,",
				"          PD_DESC as string,",
				"          KY_CD as string,",
				"          OFNS_DESC as string,",
				"          LAW_CODE as string,",
				"          LAW_CAT_CD as string,",
				"          ARREST_BORO as string,",
				"          ARREST_PRECINCT as string,",
				"          JURISDICTION_CODE as string,",
				"          AGE_GROUP as string,",
				"          PERP_SEX as string,",
				"          PERP_RACE as string,",
				"          X_COORD_CD as string,",
				"          Y_COORD_CD as string,",
				"          LATITUDE as string,",
				"          LONGITUDE as string,",
				"          NEW_GEO_COLUMNS as string,",
				"          ROW_HAS_NULLS as string,",
				"          STANDARD_DATE as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          ARREST_KEY,",
				"          ARREST_DATE,",
				"          PD_CD,",
				"          PD_DESC,",
				"          KY_CD,",
				"          OFNS_DESC,",
				"          LAW_CODE,",
				"          LAW_CAT_CD,",
				"          ARREST_BORO,",
				"          ARREST_PRECINCT,",
				"          JURISDICTION_CODE,",
				"          AGE_GROUP,",
				"          PERP_SEX,",
				"          PERP_RACE,",
				"          X_COORD_CD,",
				"          Y_COORD_CD,",
				"          LATITUDE = Latitude,",
				"          LONGITUDE = Longitude,",
				"          NEW_GEO_COLUMNS = {New Georeferenced Column},",
				"          ROW_HAS_NULLS = Row_has_nulls,",
				"          STANDARD_DATE",
				"     )) ~> Tosink123"
			]
		}
	}
}